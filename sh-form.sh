#
# This file was generated by GATBPS 0.0.0-1174-g980cc87, which was
# released on 2015-11-01. Before changing it, make sure
# you're doing the right thing. Depending on how GATBPS
# is being used, your changes may be automatically lost.
#

#
# With LC_ALL=C, locale-aware programs use the C locale instead of the
# current locale. This is generally the best approach for code that is
# not deliberately designed to work in other locales. The C locale has
# predictable behavior and is compatible with UTF-8. Other locales may
# have surprising behavior. This affects many important programs, like
# awk, grep, sed, and this shell instance itself. For more information,
# see the C standard, the POSIX standard, and the GNU C Library manual.
#

LC_ALL='C'
export 'LC_ALL'

#
# The nl variable holds a newline character. This can be used to make
# string literals more readable in some cases.
#

nl='
'

awk='awk'
for x in 'gawk' 'mawk' 'nawk'; do
  if "${x}" '' <'/dev/null' >'/dev/null' 2>'/dev/null'; then
    awk="${x}"
    break
  fi
done

sed='sed'

#
# The isatty1 and isatty2 variables indicate whether standard output and
# standard error are associated with terminals. Each starts off with the
# value 'unknown' and is lazily set to 'yes' or 'no' using the following
# code just before each point where the value is needed.
#
# For isatty1:
#
#       case "${isatty1}" in
#       #(
#         'unknown')
#           if test '-t' '1'; then
#             isatty1='yes'
#           else
#             isatty1='no'
#           fi
#         ;;
#       esac
#
# For isatty2:
#
#       case "${isatty2}" in
#       #(
#         'unknown')
#           if test '-t' '2'; then
#             isatty2='yes'
#           else
#             isatty2='no'
#           fi
#         ;;
#       esac
#

isatty1='unknown'
isatty2='unknown'

fR2=''
fB2=''
fI2=''
fd2=''
fr2=''
fg2=''
fy2=''
fb2=''
fm2=''
fc2=''

fR1=''
fB1=''
fI1=''
fd1=''
fr1=''
fg1=''
fy1=''
fb1=''
fm1=''
fc1=''

verbatim='no'

detect_options='1'

set 'x' "${@}"

while :; do

  shift

  case "${#}" in
  #(
    '0')
      break
    ;;
  esac

  case "${detect_options}" in

  #(
    '0')

      :

    ;;

  #(
    *)

      case "${1}" in

      #(
        '--')

          detect_options='0'
          continue

        ;;

      #(
        '--='*)

          cat >&2 <<EOF2
${fr2}sh-form.sh!${fd2} the ${fB2}--${fR2} option must not have a value
${fr2}sh-form.sh!${fd2} try ${fB2}sh sh-form.sh --help${fR2} for more information
EOF2
          exit '1'

        ;;

      #(
        '--'*'='*)

          "${awk}" '
{
  if (NR != 1) {
    name = name "\n"
  }
  done = sub(/=.*/, "", $0)
  name = name $0
  if (done) {
    exit
  }
}
END {
  printf "'"${fr2}"'sh-form.sh!'"${fd2}"' unknown option name: '"${fB2}"'%s'"${fR2}"'\n", name
  printf "'"${fr2}"'sh-form.sh!'"${fd2}"' try '"${fB2}"'sh sh-form.sh --help'"${fR2}"' for more information\n"
}
' >&2 <<EOF2
${1}
EOF2
          case "${?}" in
          #(
            '0')
              :
            ;;
          #(
            *)
              cat >&2 <<EOF2
${fr2}sh-form.sh!${fd2} ${fB2}${awk}${fR2} failed to read from:
${fr2}sh-form.sh!${fd2}   1. a here-document
${fr2}sh-form.sh!${fd2} and write to: standard error
EOF2
            ;;
          esac
          exit '1'

        ;;

      #(
        '--'*|'-'?)

          cat >&2 <<EOF2
${fr2}sh-form.sh!${fd2} unknown option name: ${fB2}${1}${fR2}
${fr2}sh-form.sh!${fd2} try ${fB2}sh sh-form.sh --help${fR2} for more information
EOF2
          exit '1'

        ;;

      #(
        '-'?*)

          "${awk}" '
{
  name = substr($0 "\n", 1, 2)
  printf "'"${fr2}"'sh-form.sh!'"${fd2}"' unknown option name: '"${fB2}"'%s'"${fR2}"'\n", name
  printf "'"${fr2}"'sh-form.sh!'"${fd2}"' try '"${fB2}"'sh sh-form.sh --help'"${fR2}"' for more information\n"
  exit
}
' >&2 <<EOF2
${1}
EOF2
          case "${?}" in
          #(
            '0')
              :
            ;;
          #(
            *)
              cat >&2 <<EOF2
${fr2}sh-form.sh!${fd2} ${fB2}${awk}${fR2} failed to read from:
${fr2}sh-form.sh!${fd2}   1. a here-document
${fr2}sh-form.sh!${fd2} and write to: standard error
EOF2
            ;;
          esac
          exit '1'

        ;;

      esac

    ;;

  esac

  cat >&2 <<EOF2
${fr2}sh-form.sh!${fd2} there must be no operands
${fr2}sh-form.sh!${fd2} try ${fB2}sh sh-form.sh --help${fR2} for more information
EOF2
  exit '1'

done

s=`
cat
case "${?}" in
#(
  '0')
    :
  ;;
#(
  *)
    cat >&2 <<EOF2
${fr2}sh-form.sh!${fd2} ${fB2}cat${fR2} failed to read from:
${fr2}sh-form.sh!${fd2}   1. standard input
${fr2}sh-form.sh!${fd2} and write to: a command substitution
EOF2
    exit '1'
  ;;
esac
echo "'"
case "${?}" in
#(
  '0')
    :
  ;;
#(
  *)
    cat >&2 <<EOF2
${fr2}sh-form.sh!${fd2} ${fB2}echo${fR2} failed to write to: a command substitution
EOF2
    exit '1'
  ;;
esac
`
case "${?}" in
#(
  '0')
    :
  ;;
#(
  *)
    exit '1'
  ;;
esac

case "${verbatim}" in
#(
  'no')
    case "${s}" in
    #(
      *"${nl}'")
        s=`"${awk}" '
{
  if (NR == 1) {
    x = $0
  } else {
    printf "%s", x
    x = "\\n" $0
  }
}
END {
  printf "'\\''"
}
' <<EOF2
${s}
EOF2
`
        case "${?}" in
        #(
          '0')
            :
          ;;
        #(
          *)
            cat >&2 <<EOF2
${fr2}sh-form.sh!${fd2} ${fB2}${awk}${fR2} failed to read from:
${fr2}sh-form.sh!${fd2}   1. a here-document
${fr2}sh-form.sh!${fd2} and write to: a command substitution
EOF2
            exit '1'
          ;;
        esac
      ;;
    esac
  ;;
esac

"${sed}" "
s/'/'\\\\''/g
1s/^/'/
\$s/'\\\\''\$/'/
" <<EOF2
${s}
EOF2
case "${?}" in
#(
  '0')
    :
  ;;
#(
  *)
    cat >&2 <<EOF2
${fr2}sh-form.sh!${fd2} ${fB2}${sed}${fR2} failed to read from:
${fr2}sh-form.sh!${fd2}   1. a here-document
${fr2}sh-form.sh!${fd2} and write to: standard output
EOF2
    exit '1'
  ;;
esac

exit '0'

#
# The authors of this file have waived all copyright and
# related or neighboring rights to the extent permitted by
# law as described by the CC0 1.0 Universal Public Domain
# Dedication. You should have received a copy of the full
# dedication along with this file, typically as a file
# named <CC0-1.0.txt>. If not, it may be available at
# <https://creativecommons.org/publicdomain/zero/1.0/>.
#
